<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_12684_slack_app.SlackAppHelper</api_name>
        <client_callable>false</client_callable>
        <description>Helper class for operations associated with Slack App</description>
        <name>SlackAppHelper</name>
        <script><![CDATA[var SlackAppHelper = Class.create();
SlackAppHelper.prototype = {
	_endpoint:'',
	initialize: function() {
		this._endpoint = gs.getProperty('glide.servlet.uri')+'api/now/table/';
	},
//function to configure the ServiceNow to interact with Slack app
	configureApp: function(){
		var json = new global.JSON();
		var oauthProviderReqBody = {
			client_id:gs.getProperty('x_12684_slack_app.slack.client.id'),
			type: 'oauth_provider',
			default_grant_type:'authorization_code',
			name:'Slack app test ws',
			client_secret:gs.getProperty('x_12684_slack_app.slack.client.secret'),
			auth_url:gs.getProperty('x_12684_slack_app.AuthorizationURL'),
			token_url:gs.getProperty('x_12684_slack_app.TokenUrl'),
			redirect_url:gs.getProperty('glide.servlet.uri')+'oauth_redirect.do'
		};
		var respOauthProvider = json.decode(this._restCaller(this._endpoint+'oauth_entity?sysparam_fields=sys_id','POST',json.stringify(oauthProviderReqBody)));
		var oauthScopeReqBody = {
			name:'Slack App scopes',
			oauth_entity:respOauthProvider.result.sys_id,
			oauth_entity_scope:gs.getProperty('x_12684_slack_app.scopes')
		};
		var respOauthScope = json.decode(this._restCaller(this._endpoint+'oauth_entity_scope?sysparam_fields=sys_id','POST',json.stringify(oauthScopeReqBody)));
		var respOauthEntityProfile =json.decode(this._restCaller(this._endpoint+'oauth_entity_profile?sysparm_query=oauth_entity%3D'+respOauthProvider.result.sys_id+'&sysparm_fields=sys_id&sysparm_limit=1','GET',''));
		var oauthEntityProfileScopeReqBody = {
			oauth_entity_profile:respOauthEntityProfile.result[0].sys_id,
			oauth_entity_scope:respOauthScope.result.sys_id
		};
		var respOauthEntityProfileScope = json.decode(this._restCaller(this._endpoint+'oauth_entity_profile_scope?sysparam_fields=sys_id','POST',json.stringify(oauthEntityProfileScopeReqBody)));
		var restMessageReqBody = {
			name:'Slack App Authorization request',
			rest_endpoint:gs.getProperty('x_12684_slack_app.AuthorizationURL'),
			authentication_type:'oauth2',
			oauth2_profile:respOauthEntityProfile.result[0].sys_id
		};
		var respRestMessage = json.decode(this._restCaller(this._endpoint+'sys_rest_message?sysparam_fields=sys_id','POST',restMessageReqBody));
		gs.debug('APP configuration complete');
	},
//Parse request for table operations
	reqParser: function(reqParams){
		var reqObj={};
		var json = new global.JSON();
		var endpoint = gs.getProperty('glide.servlet.uri')+'api/now/table/';
		var text =  reqParams.text.toString().trim();
		//check if the operation is match
		if(text.match(/^-(get)\s(INC|CHG|TASK|CHGTASK)(?:\d)+/g)){
			reqObj.operation = 'get';
			reqObj.ticket = text.match(/(INC|CHG|TASK|CHGTASK)(?:\d)+/g);
		}
		else if(text.match(/^-help+$/g)){
			reqObj.operation = 'help';
		}
		else if(text.match(/^-(update)\s(INC|CHG|TASK|CHGTASK)(?:\d)+\s(?:((?:\w)+(?:\=)+(?:\w|\s)+)\s)+end$/g)){
			reqObj.operation = 'update';
			reqObj.ticket = text.match(/(INC|CHG|TASK|CHGTASK)(?:\d)+/g).toString();
			reqObj.fieldInfo = text.match(/(?:\w)+=(?:\w|\s)+(?=\s)/g);
		}
		else{
			reqObj.operation = 'error';
		}
		return this._reqHandler(reqObj);
	},
	_reqHandler:function(reqObj){
		var json = new global.JSON();
		var responseBody = {
			text: "",
			attachments: []
		};
		if(reqObj.operation == 'help'){
			responseBody.text = 'ServiceNow command API, Please use below commands for accessing servicenow.';
			responseBody.attachments.push(new this._createObj('/SNow -help provide the command API details')); 
			responseBody.attachments.push(new this._createObj('/SNow -get [ticket number] will retrive ticket info.'));
			responseBody.attachments.push(new this._createObj('/SNow -update [ticket number] [operation=value] [operation=value] operation can be field values such as comment,assign. Command will update the ticket based on the operation'));
			//gs.info(responseBody.attachments.length);
		}
		if(reqObj.operation == 'get'){
			var ticketInfo = json.decode(this._restCaller(this._endpoint+'task?sysparm_query=number%3D'+reqObj.ticket+'&sysparm_display_value=true&sysparm_exclude_reference_link=true&sysparm_fields=number%2Copened_by%2Cstate%2Ccmdb_ci%2Cshort_description%2Cdescription%2Cassigned_to&sysparm_limit=1','GET',''));
			//this._printObj(ticketInfo);
			responseBody.text = 'Details of Ticket: '+reqObj.ticket;
			for(var key in ticketInfo.result[0]){
				responseBody.attachments.push(new this._createObj(key+': '+ticketInfo.result[0][key]));
			}
		}
		if(reqObj.operation == 'update'){
			
		}
		return responseBody;
		
	},
//Private rest caller method used to make rest calls for table operations
	_restCaller: function(endpoint,method,requestBody){
		var request = new sn_ws.RESTMessageV2();
		request.setEndpoint(endpoint);
		request.setHttpMethod(method);
		var user = 'kvallams';
		var password = 'root';
		request.setBasicAuth(user,password);
		request.setRequestHeader("Accept","application/json");
		request.setRequestHeader('Content-Type','application/json');
		if(requestBody != ''){
			request.setRequestBody(requestBody);
		}
		gs.info(request.getRequestBody());
		var response = request.execute();
		gs.info(response.getStatusCode());
		gs.info(response.getErrorCode());
		gs.info(response.getErrorMessage());
		gs.info(response.getBody());
		return response.getBody();
	},
	_createObj: function(value){
		this.text = value;
	},
	_printObj:function(obj){
		var result='';
		for(var key in obj){
			result=result+','+key+'::'+obj[key];
		}
		gs.info(result);
	},
	
	type: 'SlackAppHelper'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>kvallams</sys_created_by>
        <sys_created_on>2017-02-20 04:29:52</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>0fd9f261dbcd3200378fd450cf96194d</sys_id>
        <sys_mod_count>56</sys_mod_count>
        <sys_name>SlackAppHelper</sys_name>
        <sys_package display_value="Slack App" source="x_12684_slack_app">3482f625db8d3200378fd450cf9619a0</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Slack App">3482f625db8d3200378fd450cf9619a0</sys_scope>
        <sys_update_name>sys_script_include_0fd9f261dbcd3200378fd450cf96194d</sys_update_name>
        <sys_updated_by>kvallams</sys_updated_by>
        <sys_updated_on>2017-02-23 01:44:34</sys_updated_on>
    </sys_script_include>
</record_update>
